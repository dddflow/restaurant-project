BEGIN
  -- Drop all views
  FOR v IN (SELECT view_name FROM user_views) LOOP
    EXECUTE IMMEDIATE 'DROP VIEW "' || v.view_name || '"';
  END LOOP;

  -- Drop all triggers
  FOR trg IN (SELECT trigger_name FROM user_triggers) LOOP
    EXECUTE IMMEDIATE 'DROP TRIGGER "' || trg.trigger_name || '"';
  END LOOP;

  -- Drop all sequences
  FOR seq IN (SELECT sequence_name FROM user_sequences) LOOP
    EXECUTE IMMEDIATE 'DROP SEQUENCE "' || seq.sequence_name || '"';
  END LOOP;

  -- Drop all tables
  FOR t IN (SELECT table_name FROM user_tables) LOOP
    EXECUTE IMMEDIATE 'DROP TABLE "' || t.table_name || '" CASCADE CONSTRAINTS';
  END LOOP;
END;
/

------------------- TABLES --------------------
CREATE TABLE PEOPLE (
    ID NUMBER,
    PERSON_NAME VARCHAR2(100) NOT NULL,
    GENDER CHAR(1) NOT NULL CONSTRAINT CHK_PEOPLE_GENDER CHECK (GENDER IN ('M', 'F')),
    EMAIL VARCHAR2(100) NOT NULL,
    PHONE VARCHAR2(20) NOT NULL,
    CONSTRAINT PK_PEOPLE PRIMARY KEY (ID),
    CONSTRAINT UQ_PEOPLE_EMAIL UNIQUE (EMAIL),
    CONSTRAINT UQ_PEOPLE_PHONE UNIQUE (PHONE)
);


CREATE TABLE SUPPLIERS (
    ID NUMBER,
    SUPPLIER_TERM VARCHAR2(300) NOT NULL,
    CONSTRAINT PK_SUPPLIERS PRIMARY KEY (ID),
    CONSTRAINT FK_SUPPLIERS_PEOPLE FOREIGN KEY (ID) REFERENCES PEOPLE (ID)
);


CREATE TABLE WAITERS (
    ID NUMBER,
    SALARY NUMBER(10, 2) NOT NULL,
    CONSTRAINT PK_WAITERS PRIMARY KEY (ID),
    CONSTRAINT FK_WAITERS_PEOPLE FOREIGN KEY (ID) REFERENCES PEOPLE (ID)
);


CREATE TABLE CUSTOMERS (
    ID NUMBER,
    DISCOUNT NUMBER(5, 2),
    CONSTRAINT PK_CUSTOMERS PRIMARY KEY (ID),
    CONSTRAINT FK_CUSTOMERS_PEOPLE FOREIGN KEY (ID) REFERENCES PEOPLE (ID)
);


CREATE TABLE REVIEWS (
    CID NUMBER,
    REVIEWED_ON DATE NOT NULL,
    RATING NUMBER(1) NOT NULL,
    REVIEW VARCHAR2(255),
    CONSTRAINT PK_REVIEWS PRIMARY KEY (CID, REVIEWED_ON),
    CONSTRAINT FK_REVIEWS_CUSTOMERS FOREIGN KEY (CID) REFERENCES CUSTOMERS (ID),
    CONSTRAINT CHK_REVIEWS_RATING CHECK (RATING BETWEEN 1 AND 5)
);


CREATE TABLE INGREDIENTS (
    ID NUMBER,
    INGREDIENT_NAME VARCHAR2(100) NOT NULL,
    INGREDIENT_UNIT VARCHAR2(20) NOT NULL,
    QUANTITY NUMBER(10, 2) NOT NULL,
    CONSTRAINT PK_INGREDIENTS PRIMARY KEY (ID),
    CONSTRAINT CHK_INGREDIENTS_QUANTITY_NONNEGATIVE CHECK (QUANTITY >= 0)
);


CREATE TABLE DELIVERIES (
    ID NUMBER,
    SUPPLIER_ID NUMBER NOT NULL,
    DELIVERED_ON DATE NOT NULL,
    CONSTRAINT PK_DELIVERIES PRIMARY KEY (ID),
    CONSTRAINT FK_DELIVERIES_SUPPLIERS FOREIGN KEY (SUPPLIER_ID) REFERENCES SUPPLIERS (ID)
);


CREATE TABLE DELIVERED (
    INGREDIENT_ID NUMBER NOT NULL,
    DELIVERY_ID NUMBER NOT NULL,
    UNIT_NUMBER NUMBER(10, 2) NOT NULL,
    UNIT_PRICE NUMBER(10, 2) NOT NULL,
    CONSTRAINT PK_DELIVERED PRIMARY KEY (INGREDIENT_ID, DELIVERY_ID),
    CONSTRAINT FK_DELIVERED_INGREDIENTS FOREIGN KEY (INGREDIENT_ID) REFERENCES INGREDIENTS (ID),
    CONSTRAINT FK_DELIVERED_DELIVERIES FOREIGN KEY (DELIVERY_ID) REFERENCES DELIVERIES (ID),
    CONSTRAINT CHK_DELIVERED_PRICE_NONNEGATIVE CHECK (UNIT_PRICE >= 0),
    CONSTRAINT CHK_DELIVERED_UNITS_NONNEGATIVE CHECK (UNIT_NUMBER >= 0)
);


CREATE TABLE RESTAURANT_ORDERS (
    ID NUMBER,
    CUSTOMER_ID NUMBER NOT NULL,
    WAITER_ID NUMBER NOT NULL,
    MADE_ON DATE NOT NULL,
    TIPS NUMBER(10, 2),
    CONSTRAINT PK_RESTAURANT_ORDERS PRIMARY KEY (ID),
    CONSTRAINT FK_RESTAURANT_ORDERS_CUSTOMERS FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMERS (ID),
    CONSTRAINT FK_RESTAURANT_ORDERS_WAITERS FOREIGN KEY (WAITER_ID) REFERENCES WAITERS (ID),
    CONSTRAINT CHK_RESTAURANT_ORDERS_TIPS_NONNEGATIVE CHECK (TIPS >= 0)
);


CREATE TABLE RESTAURANT_TABLES (
    ID NUMBER,
    CAPACITY NUMBER NOT NULL,
    CONSTRAINT PK_RESTAURANT_TABLES PRIMARY KEY (ID),
    CONSTRAINT CHK_RESTAURANT_TABLES_CAPACITY_POSITIVE CHECK (CAPACITY > 0)
);


CREATE TABLE TABLE_SERVICE (
    ORDER_ID NUMBER NOT NULL,
    TABLE_ID NUMBER NOT NULL,
    SERVED_ON DATE NOT NULL,
    CONSTRAINT PK_TABLE_SERVICE PRIMARY KEY (ORDER_ID, TABLE_ID),
    CONSTRAINT FK_TABLE_SERVICE_RESTAURANT_ORDERS FOREIGN KEY (ORDER_ID) REFERENCES RESTAURANT_ORDERS (ID),
    CONSTRAINT FK_TABLE_SERVICE_RESTAURANT_TABLES FOREIGN KEY (TABLE_ID) REFERENCES RESTAURANT_TABLES (ID)
);


CREATE TABLE CATEGORIES (
    ID NUMBER,
    CATEGORY_NAME VARCHAR2(100) NOT NULL,
    CONSTRAINT UQ_CATEGORY_NAME UNIQUE (CATEGORY_NAME),
    CONSTRAINT PK_CATEGORIES PRIMARY KEY (ID)
);


CREATE TABLE DISHES (
    ID NUMBER,
    DISH_NAME VARCHAR2(100) NOT NULL,
    DESCRIPTION VARCHAR2(500) NOT NULL,
    PRICE NUMBER(6, 2) NOT NULL,
    CATEGORY_ID NUMBER NOT NULL,
    CONSTRAINT PK_DISHES PRIMARY KEY (ID),
    CONSTRAINT UQ_DISH_NAME UNIQUE (DISH_NAME),
    CONSTRAINT FK_DISHES_CATEGORY FOREIGN KEY (CATEGORY_ID) REFERENCES CATEGORIES (ID),
    CONSTRAINT CHK_DISHES_PRICE_POSITIVE CHECK (PRICE >= 0)
);


CREATE TABLE DISHES_TO_ORDERS (
    ORDER_ID NUMBER NOT NULL,
    DISH_ID NUMBER NOT NULL,
    QUANTITY NUMBER NOT NULL,
    CONSTRAINT PK_DTO PRIMARY KEY (ORDER_ID, DISH_ID),
    CONSTRAINT FK_DTO_RESTAURANT_ORDERS FOREIGN KEY (ORDER_ID) REFERENCES RESTAURANT_ORDERS (ID),
    CONSTRAINT FK_DTO_DISHES FOREIGN KEY (DISH_ID) REFERENCES DISHES (ID)
);

CREATE TABLE DISH_INGREDIENTS (
    DISH_ID NUMBER NOT NULL,
    INGREDIENT_ID NUMBER NOT NULL,
    QUANTITY_NEEDED NUMBER(10, 2) NOT NULL,
    CONSTRAINT PK_DISH_INGREDIENTS PRIMARY KEY (DISH_ID, INGREDIENT_ID),
    CONSTRAINT FK_DI_DISH FOREIGN KEY (DISH_ID) REFERENCES DISHES (ID),
    CONSTRAINT FK_DI_INGREDIENT FOREIGN KEY (INGREDIENT_ID) REFERENCES INGREDIENTS (ID),
    CONSTRAINT CHK_QUANTITY_POSITIVE CHECK (QUANTITY_NEEDED > 0)
);


------------------- TRIGGERS --------------------
-- Trigger for updating quantity of ingredients after delivery
CREATE OR REPLACE TRIGGER TRG_UPDATE_INGREDIENT_QUANTITY
    AFTER INSERT ON DELIVERED
    FOR EACH ROW
BEGIN
    UPDATE INGREDIENTS
    SET QUANTITY = QUANTITY + :NEW.UNIT_NUMBER
    WHERE ID = :NEW.INGREDIENT_ID;
END;

-- trigger for checking if there are enough ingredients for a dish and
-- subtraction of ingredients from the storage after placing an order
CREATE OR REPLACE TRIGGER TRG_PROCESS_ORDER
    BEFORE INSERT ON DISHES_TO_ORDERS
    FOR EACH ROW
DECLARE
    V_AVAILABLE_QTY NUMBER;
    V_NEEDED_QTY NUMBER;
BEGIN
    FOR REC IN (
        SELECT
            INGREDIENT_ID,
            QUANTITY_NEEDED
        FROM DISH_INGREDIENTS
        WHERE DISH_ID = :NEW.DISH_ID
    ) LOOP
        SELECT INGREDIENTS.QUANTITY
        INTO V_AVAILABLE_QTY
        FROM INGREDIENTS
        WHERE INGREDIENTS.ID = REC.INGREDIENT_ID;

        V_NEEDED_QTY := REC.QUANTITY_NEEDED * :NEW.QUANTITY;

        IF V_AVAILABLE_QTY < V_NEEDED_QTY THEN
            RAISE_APPLICATION_ERROR(
                -20001,
                'Not enough of ingredient ID=' || REC.INGREDIENT_ID
                    || '. Needed: '
                    || V_NEEDED_QTY
                    || ', available: '
                    || V_AVAILABLE_QTY
            );
        END IF;

        UPDATE INGREDIENTS
        SET QUANTITY = QUANTITY - V_NEEDED_QTY
        WHERE ID = REC.INGREDIENT_ID;
    END LOOP;
END;

-- View for derived attribute "status" of the order
CREATE OR REPLACE VIEW ORDER_STATUS_VIEW AS
SELECT
    RO.ID AS ORDERID,
    RO.CUSTOMER_ID AS CUSTOMERID,
    RO.WAITER_ID AS WAITERID,
    RO.MADE_ON AS MADEON,
    RO.TIPS AS TIPS,
    CASE
        WHEN NOT EXISTS (
            SELECT 1
            FROM TABLE_SERVICE TS
            WHERE TS.ORDER_ID = RO.ID
        ) THEN 'Pending'
        ELSE 'Served'
    END AS STATUS
FROM RESTAURANT_ORDERS RO;


-- View for the derived attribute "TotalPrice" for the Order
CREATE OR REPLACE VIEW ORDER_TOTAL_PRICE_VIEW AS
SELECT
    RO.ID AS ORDER_ID,
    RO.CUSTOMER_ID,
    RO.WAITER_ID,
    RO.MADE_ON,
    RO.TIPS,
    SUM(DTO.QUANTITY * D.PRICE) AS ORIGINAL_PRICE,
    C.DISCOUNT,
    ROUND(
        SUM(DTO.QUANTITY * D.PRICE) * (1 - C.DISCOUNT / 100),
        2
    ) AS DISCOUNTED_PRICE
FROM RESTAURANT_ORDERS RO
INNER JOIN DISHES_TO_ORDERS DTO ON RO.ID = DTO.ORDER_ID
INNER JOIN DISHES D ON DTO.DISH_ID = D.ID
INNER JOIN CUSTOMERS C ON RO.CUSTOMER_ID = C.ID
GROUP BY
    RO.ID, RO.CUSTOMER_ID, RO.WAITER_ID, RO.MADE_ON, RO.TIPS, C.DISCOUNT;
COMMIT;

-- === SEQUENCES FOR AUTO-INCREMENT ===
CREATE SEQUENCE SEQ_PEOPLE START WITH 10000 INCREMENT BY 1;
CREATE SEQUENCE SEQ_INGREDIENTS START WITH 10000 INCREMENT BY 1;
CREATE SEQUENCE SEQ_DELIVERIES START WITH 10000 INCREMENT BY 1;
CREATE SEQUENCE SEQ_RESTAURANT_ORDERS START WITH 10000 INCREMENT BY 1;
CREATE SEQUENCE SEQ_CATEGORIES START WITH 10000 INCREMENT BY 1;
CREATE SEQUENCE SEQ_DISHES START WITH 10000 INCREMENT BY 1;

-- === TRIGGERS FOR AUTO-GENERATING IDS ===
CREATE OR REPLACE TRIGGER TRG_PEOPLE_ID
BEFORE INSERT ON PEOPLE
FOR EACH ROW
BEGIN
  SELECT SEQ_PEOPLE.NEXTVAL INTO :NEW.ID FROM DUAL;
END;

CREATE OR REPLACE TRIGGER TRG_INGREDIENTS_ID
BEFORE INSERT ON INGREDIENTS
FOR EACH ROW
BEGIN
  SELECT SEQ_INGREDIENTS.NEXTVAL INTO :NEW.ID FROM DUAL;
END;

CREATE OR REPLACE TRIGGER TRG_DELIVERIES_ID
BEFORE INSERT ON DELIVERIES
FOR EACH ROW
BEGIN
  SELECT SEQ_DELIVERIES.NEXTVAL INTO :NEW.ID FROM DUAL;
END;

CREATE OR REPLACE TRIGGER TRG_RESTAURANT_ORDERS_ID
BEFORE INSERT ON RESTAURANT_ORDERS
FOR EACH ROW
BEGIN
  SELECT SEQ_RESTAURANT_ORDERS.NEXTVAL INTO :NEW.ID FROM DUAL;
END;

CREATE OR REPLACE TRIGGER TRG_CATEGORIES_ID
BEFORE INSERT ON CATEGORIES
FOR EACH ROW
BEGIN
  SELECT SEQ_CATEGORIES.NEXTVAL INTO :NEW.ID FROM DUAL;
END;

CREATE OR REPLACE TRIGGER TRG_DISHES_ID
BEFORE INSERT ON DISHES
FOR EACH ROW
BEGIN
  SELECT SEQ_DISHES.NEXTVAL INTO :NEW.ID FROM DUAL;
END;


-- ==================================== DATA =============================================

-- ==================================== CATEGORIES =============================================
INSERT INTO CATEGORIES (CATEGORY_NAME) VALUES ('Main Course');
INSERT INTO CATEGORIES (CATEGORY_NAME) VALUES ('Appetizer');
INSERT INTO CATEGORIES (CATEGORY_NAME) VALUES ('Dessert');
INSERT INTO CATEGORIES (CATEGORY_NAME) VALUES ('Soup');
INSERT INTO CATEGORIES (CATEGORY_NAME) VALUES ('Drinks');
INSERT INTO CATEGORIES (CATEGORY_NAME) VALUES ('Salad');
INSERT INTO CATEGORIES (CATEGORY_NAME) VALUES ('Pizza');
INSERT INTO CATEGORIES (CATEGORY_NAME) VALUES ('Fish');

-- ==================================== DISHES =============================================
DECLARE v_cat NUMBER;
BEGIN
  SELECT ID INTO v_cat FROM CATEGORIES WHERE CATEGORY_NAME = 'Main Course';
  INSERT INTO DISHES (DISH_NAME, DESCRIPTION, PRICE, CATEGORY_ID)
  VALUES ('Spaghetti Carbonara', 'Pasta with bacon and eggs', 12.50, v_cat);
END;
/

DECLARE v_cat NUMBER;
BEGIN
  SELECT ID INTO v_cat FROM CATEGORIES WHERE CATEGORY_NAME = 'Appetizer';
  INSERT INTO DISHES (DISH_NAME, DESCRIPTION, PRICE, CATEGORY_ID)
  VALUES ('Caesar Salad', 'Salad with chicken and croutons', 8.00, v_cat);
END;
/

DECLARE v_cat NUMBER;
BEGIN
  SELECT ID INTO v_cat FROM CATEGORIES WHERE CATEGORY_NAME = 'Dessert';
  INSERT INTO DISHES (DISH_NAME, DESCRIPTION, PRICE, CATEGORY_ID)
  VALUES ('Tiramisu', 'Coffee-flavored Italian dessert', 6.50, v_cat);
END;
/

DECLARE v_cat NUMBER;
BEGIN
  SELECT ID INTO v_cat FROM CATEGORIES WHERE CATEGORY_NAME = 'Main Course';
  INSERT INTO DISHES (DISH_NAME, DESCRIPTION, PRICE, CATEGORY_ID)
  VALUES ('Ukrainian Borscht', 'Beet soup with sour cream', 10.00, v_cat);
END;
/

DECLARE v_cat NUMBER;
BEGIN
  SELECT ID INTO v_cat FROM CATEGORIES WHERE CATEGORY_NAME = 'Soup';
  INSERT INTO DISHES (DISH_NAME, DESCRIPTION, PRICE, CATEGORY_ID)
  VALUES ('Chicken Soup', 'Classic chicken soup with vegetables', 7.00, v_cat);
END;
/

DECLARE v_cat NUMBER;
BEGIN
  SELECT ID INTO v_cat FROM CATEGORIES WHERE CATEGORY_NAME = 'Drinks';
  INSERT INTO DISHES (DISH_NAME, DESCRIPTION, PRICE, CATEGORY_ID)
  VALUES ('Orange Juice', 'Freshly squeezed orange juice', 3.00, v_cat);
END;
/

DECLARE v_cat NUMBER;
BEGIN
  SELECT ID INTO v_cat FROM CATEGORIES WHERE CATEGORY_NAME = 'Dessert';
  INSERT INTO DISHES (DISH_NAME, DESCRIPTION, PRICE, CATEGORY_ID)
  VALUES ('Cheesecake', 'Classic cheesecake with berries', 5.00, v_cat);
END;
/

DECLARE v_cat NUMBER;
BEGIN
  SELECT ID INTO v_cat FROM CATEGORIES WHERE CATEGORY_NAME = 'Salad';
  INSERT INTO DISHES (DISH_NAME, DESCRIPTION, PRICE, CATEGORY_ID)
  VALUES ('Greek Salad', 'Fresh vegetables with feta cheese', 7.50, v_cat);
END;
/

DECLARE v_cat NUMBER;
BEGIN
  SELECT ID INTO v_cat FROM CATEGORIES WHERE CATEGORY_NAME = 'Pizza';
  INSERT INTO DISHES (DISH_NAME, DESCRIPTION, PRICE, CATEGORY_ID)
  VALUES ('Margherita Pizza', 'Classic pizza with tomato and mozzarella', 9.00, v_cat);
END;
/

DECLARE v_cat NUMBER;
BEGIN
  SELECT ID INTO v_cat FROM CATEGORIES WHERE CATEGORY_NAME = 'Fish';
  INSERT INTO DISHES (DISH_NAME, DESCRIPTION, PRICE, CATEGORY_ID)
  VALUES ('Tuna Steak', 'Grilled tuna steak with lemon', 14.50, v_cat);
END;
/

-- ==================================== INGREDIENTS =============================================
INSERT INTO INGREDIENTS (INGREDIENT_NAME, INGREDIENT_UNIT, QUANTITY) VALUES ('Pasta', 'kg', 5);
INSERT INTO INGREDIENTS (INGREDIENT_NAME, INGREDIENT_UNIT, QUANTITY) VALUES ('Bacon', 'kg', 3);
INSERT INTO INGREDIENTS (INGREDIENT_NAME, INGREDIENT_UNIT, QUANTITY) VALUES ('Eggs', 'pcs', 30);
INSERT INTO INGREDIENTS (INGREDIENT_NAME, INGREDIENT_UNIT, QUANTITY) VALUES ('Carrot', 'kg', 10);
INSERT INTO INGREDIENTS (INGREDIENT_NAME, INGREDIENT_UNIT, QUANTITY) VALUES ('Beetroot', 'kg', 8);
INSERT INTO INGREDIENTS (INGREDIENT_NAME, INGREDIENT_UNIT, QUANTITY) VALUES ('Cream', 'l', 4);
INSERT INTO INGREDIENTS (INGREDIENT_NAME, INGREDIENT_UNIT, QUANTITY) VALUES ('Chicken', 'kg', 6);
INSERT INTO INGREDIENTS (INGREDIENT_NAME, INGREDIENT_UNIT, QUANTITY) VALUES ('Lettuce', 'kg', 2);
INSERT INTO INGREDIENTS (INGREDIENT_NAME, INGREDIENT_UNIT, QUANTITY) VALUES ('Orange', 'kg', 6);
INSERT INTO INGREDIENTS (INGREDIENT_NAME, INGREDIENT_UNIT, QUANTITY) VALUES ('Cheese', 'kg', 2);
INSERT INTO INGREDIENTS (INGREDIENT_NAME, INGREDIENT_UNIT, QUANTITY) VALUES ('Berry', 'kg', 1);
INSERT INTO INGREDIENTS (INGREDIENT_NAME, INGREDIENT_UNIT, QUANTITY) VALUES ('Onion', 'kg', 4);
INSERT INTO INGREDIENTS (INGREDIENT_NAME, INGREDIENT_UNIT, QUANTITY) VALUES ('Feta Cheese', 'kg', 1);
INSERT INTO INGREDIENTS (INGREDIENT_NAME, INGREDIENT_UNIT, QUANTITY) VALUES ('Tomato', 'kg', 5);
INSERT INTO INGREDIENTS (INGREDIENT_NAME, INGREDIENT_UNIT, QUANTITY) VALUES ('Mozzarella', 'kg', 2);
INSERT INTO INGREDIENTS (INGREDIENT_NAME, INGREDIENT_UNIT, QUANTITY) VALUES ('Tuna', 'kg', 3);
INSERT INTO INGREDIENTS (INGREDIENT_NAME, INGREDIENT_UNIT, QUANTITY) VALUES ('Lemon', 'pcs', 10);

-- ==================================== DISH_INGREDIENTS =============================================
DECLARE d_id NUMBER; i_id NUMBER;
BEGIN
  SELECT ID INTO d_id FROM DISHES WHERE DISH_NAME = 'Spaghetti Carbonara';
  SELECT ID INTO i_id FROM INGREDIENTS WHERE INGREDIENT_NAME = 'Pasta';
  INSERT INTO DISH_INGREDIENTS VALUES (d_id, i_id, 0.1);
END;
/

DECLARE d_id NUMBER; i_id NUMBER;
BEGIN
  SELECT ID INTO d_id FROM DISHES WHERE DISH_NAME = 'Spaghetti Carbonara';
  SELECT ID INTO i_id FROM INGREDIENTS WHERE INGREDIENT_NAME = 'Bacon';
  INSERT INTO DISH_INGREDIENTS VALUES (d_id, i_id, 0.05);
END;
/

DECLARE d_id NUMBER; i_id NUMBER;
BEGIN
  SELECT ID INTO d_id FROM DISHES WHERE DISH_NAME = 'Spaghetti Carbonara';
  SELECT ID INTO i_id FROM INGREDIENTS WHERE INGREDIENT_NAME = 'Eggs';
  INSERT INTO DISH_INGREDIENTS VALUES (d_id, i_id, 2);
END;
/

DECLARE d_id NUMBER; i_id NUMBER;
BEGIN
  SELECT ID INTO d_id FROM DISHES WHERE DISH_NAME = 'Caesar Salad';
  SELECT ID INTO i_id FROM INGREDIENTS WHERE INGREDIENT_NAME = 'Chicken';
  INSERT INTO DISH_INGREDIENTS VALUES (d_id, i_id, 0.1);
END;
/

DECLARE d_id NUMBER; i_id NUMBER;
BEGIN
  SELECT ID INTO d_id FROM DISHES WHERE DISH_NAME = 'Caesar Salad';
  SELECT ID INTO i_id FROM INGREDIENTS WHERE INGREDIENT_NAME = 'Lettuce';
  INSERT INTO DISH_INGREDIENTS VALUES (d_id, i_id, 0.05);
END;
/

DECLARE d_id NUMBER; i_id NUMBER;
BEGIN
  SELECT ID INTO d_id FROM DISHES WHERE DISH_NAME = 'Ukrainian Borscht';
  SELECT ID INTO i_id FROM INGREDIENTS WHERE INGREDIENT_NAME = 'Carrot';
  INSERT INTO DISH_INGREDIENTS VALUES (d_id, i_id, 0.1);
END;
/

DECLARE d_id NUMBER; i_id NUMBER;
BEGIN
  SELECT ID INTO d_id FROM DISHES WHERE DISH_NAME = 'Ukrainian Borscht';
  SELECT ID INTO i_id FROM INGREDIENTS WHERE INGREDIENT_NAME = 'Beetroot';
  INSERT INTO DISH_INGREDIENTS VALUES (d_id, i_id, 0.1);
END;
/

DECLARE d_id NUMBER; i_id NUMBER;
BEGIN
  SELECT ID INTO d_id FROM DISHES WHERE DISH_NAME = 'Ukrainian Borscht';
  SELECT ID INTO i_id FROM INGREDIENTS WHERE INGREDIENT_NAME = 'Cream';
  INSERT INTO DISH_INGREDIENTS VALUES (d_id, i_id, 0.05);
END;
/

DECLARE d_id NUMBER; i_id NUMBER;
BEGIN
  SELECT ID INTO d_id FROM DISHES WHERE DISH_NAME = 'Chicken Soup';
  SELECT ID INTO i_id FROM INGREDIENTS WHERE INGREDIENT_NAME = 'Chicken';
  INSERT INTO DISH_INGREDIENTS VALUES (d_id, i_id, 0.2);
END;
/

DECLARE d_id NUMBER; i_id NUMBER;
BEGIN
  SELECT ID INTO d_id FROM DISHES WHERE DISH_NAME = 'Chicken Soup';
  SELECT ID INTO i_id FROM INGREDIENTS WHERE INGREDIENT_NAME = 'Carrot';
  INSERT INTO DISH_INGREDIENTS VALUES (d_id, i_id, 0.05);
END;
/

DECLARE d_id NUMBER; i_id NUMBER;
BEGIN
  SELECT ID INTO d_id FROM DISHES WHERE DISH_NAME = 'Chicken Soup';
  SELECT ID INTO i_id FROM INGREDIENTS WHERE INGREDIENT_NAME = 'Onion';
  INSERT INTO DISH_INGREDIENTS VALUES (d_id, i_id, 0.05);
END;
/

DECLARE d_id NUMBER; i_id NUMBER;
BEGIN
  SELECT ID INTO d_id FROM DISHES WHERE DISH_NAME = 'Orange Juice';
  SELECT ID INTO i_id FROM INGREDIENTS WHERE INGREDIENT_NAME = 'Orange';
  INSERT INTO DISH_INGREDIENTS VALUES (d_id, i_id, 0.15);
END;
/

DECLARE d_id NUMBER; i_id NUMBER;
BEGIN
  SELECT ID INTO d_id FROM DISHES WHERE DISH_NAME = 'Cheesecake';
  SELECT ID INTO i_id FROM INGREDIENTS WHERE INGREDIENT_NAME = 'Cheese';
  INSERT INTO DISH_INGREDIENTS VALUES (d_id, i_id, 0.1);
END;
/

DECLARE d_id NUMBER; i_id NUMBER;
BEGIN
  SELECT ID INTO d_id FROM DISHES WHERE DISH_NAME = 'Cheesecake';
  SELECT ID INTO i_id FROM INGREDIENTS WHERE INGREDIENT_NAME = 'Berry';
  INSERT INTO DISH_INGREDIENTS VALUES (d_id, i_id, 0.02);
END;
/

DECLARE d_id NUMBER; i_id NUMBER;
BEGIN
  SELECT ID INTO d_id FROM DISHES WHERE DISH_NAME = 'Greek Salad';
  SELECT ID INTO i_id FROM INGREDIENTS WHERE INGREDIENT_NAME = 'Feta Cheese';
  INSERT INTO DISH_INGREDIENTS VALUES (d_id, i_id, 0.08);
END;
/

DECLARE d_id NUMBER; i_id NUMBER;
BEGIN
  SELECT ID INTO d_id FROM DISHES WHERE DISH_NAME = 'Greek Salad';
  SELECT ID INTO i_id FROM INGREDIENTS WHERE INGREDIENT_NAME = 'Tomato';
  INSERT INTO DISH_INGREDIENTS VALUES (d_id, i_id, 0.15);
END;
/

DECLARE d_id NUMBER; i_id NUMBER;
BEGIN
  SELECT ID INTO d_id FROM DISHES WHERE DISH_NAME = 'Margherita Pizza';
  SELECT ID INTO i_id FROM INGREDIENTS WHERE INGREDIENT_NAME = 'Mozzarella';
  INSERT INTO DISH_INGREDIENTS VALUES (d_id, i_id, 0.12);
END;
/

DECLARE d_id NUMBER; i_id NUMBER;
BEGIN
  SELECT ID INTO d_id FROM DISHES WHERE DISH_NAME = 'Margherita Pizza';
  SELECT ID INTO i_id FROM INGREDIENTS WHERE INGREDIENT_NAME = 'Tomato';
  INSERT INTO DISH_INGREDIENTS VALUES (d_id, i_id, 0.10);
END;
/

DECLARE d_id NUMBER; i_id NUMBER;
BEGIN
  SELECT ID INTO d_id FROM DISHES WHERE DISH_NAME = 'Tuna Steak';
  SELECT ID INTO i_id FROM INGREDIENTS WHERE INGREDIENT_NAME = 'Tuna';
  INSERT INTO DISH_INGREDIENTS VALUES (d_id, i_id, 0.2);
END;
/

DECLARE d_id NUMBER; i_id NUMBER;
BEGIN
  SELECT ID INTO d_id FROM DISHES WHERE DISH_NAME = 'Tuna Steak';
  SELECT ID INTO i_id FROM INGREDIENTS WHERE INGREDIENT_NAME = 'Lemon';
  INSERT INTO DISH_INGREDIENTS VALUES (d_id, i_id, 1);
END;
/

-- ==================================== CUSTOMERS =============================================
DECLARE v_id NUMBER;
BEGIN
  INSERT INTO PEOPLE (PERSON_NAME, GENDER, EMAIL, PHONE)
  VALUES ('Alice Cust', 'F', 'alice.cust@gmail.com', '9000001')
  RETURNING ID INTO v_id;
  INSERT INTO CUSTOMERS (ID, DISCOUNT) VALUES (v_id, 15.00);
END;
/

DECLARE v_id NUMBER;
BEGIN
  INSERT INTO PEOPLE (PERSON_NAME, GENDER, EMAIL, PHONE)
  VALUES ('John Smith', 'M', 'john.smith@gmail.com', '9000002')
  RETURNING ID INTO v_id;
  INSERT INTO CUSTOMERS (ID, DISCOUNT) VALUES (v_id, 5.00);
END;
/

DECLARE v_id NUMBER;
BEGIN
  INSERT INTO PEOPLE (PERSON_NAME, GENDER, EMAIL, PHONE)
  VALUES ('Maria Petrova', 'F', 'maria.petrova@gmail.com', '9000003')
  RETURNING ID INTO v_id;
  INSERT INTO CUSTOMERS (ID, DISCOUNT) VALUES (v_id, 10.00);
END;
/

DECLARE
  v_id NUMBER;
BEGIN
  INSERT INTO PEOPLE (PERSON_NAME, GENDER, EMAIL, PHONE)
  VALUES ('Jane Doe', 'F', 'jane.doe@gmail.com', '9111111')
  RETURNING ID INTO v_id;
  INSERT INTO CUSTOMERS (ID, DISCOUNT)
  VALUES (v_id, 10.0);
END;
/

DECLARE
  v_id NUMBER;
BEGIN
  INSERT INTO PEOPLE (PERSON_NAME, GENDER, EMAIL, PHONE)
  VALUES ('Olga Ivanova', 'F', 'olga.ivanova@gmail.com', '9000004')
  RETURNING ID INTO v_id;
  INSERT INTO CUSTOMERS (ID, DISCOUNT)
  VALUES (v_id, 8.00);
END;
/

DECLARE
  v_id NUMBER;
BEGIN
  -- Sergey Petrov
  INSERT INTO PEOPLE (PERSON_NAME, GENDER, EMAIL, PHONE)
  VALUES ('Sergey Petrov', 'M', 'sergey.petrov@gmail.com', '9000005')
  RETURNING ID INTO v_id;
  INSERT INTO CUSTOMERS (ID, DISCOUNT)
  VALUES (v_id, 12.00);
END;
/

DECLARE
  v_id NUMBER;
BEGIN
  -- Marta Sousa
  INSERT INTO PEOPLE (PERSON_NAME, GENDER, EMAIL, PHONE)
  VALUES ('Marta Sousa', 'F', 'marta.sousa@gmail.com', '9000008')
  RETURNING ID INTO v_id;
  INSERT INTO CUSTOMERS (ID, DISCOUNT)
  VALUES (v_id, 7.50);
END;
/

DECLARE
  v_id NUMBER;
BEGIN
  -- Pedro Alves
  INSERT INTO PEOPLE (PERSON_NAME, GENDER, EMAIL, PHONE)
  VALUES ('Pedro Alves', 'M', 'pedro.alves@gmail.com', '9000009')
  RETURNING ID INTO v_id;
  INSERT INTO CUSTOMERS (ID, DISCOUNT)
  VALUES (v_id, 5.50);
END;
/

DECLARE
  v_id NUMBER;
BEGIN
  INSERT INTO PEOPLE (PERSON_NAME, GENDER, EMAIL, PHONE)
  VALUES ('João Pereira', 'M', 'joao.pereira@gmail.com', '9000012')
  RETURNING ID INTO v_id;
  INSERT INTO CUSTOMERS (ID, DISCOUNT) VALUES (v_id, 6.50);
END;
/

DECLARE
  v_id NUMBER;
BEGIN
  INSERT INTO PEOPLE (PERSON_NAME, GENDER, EMAIL, PHONE)
  VALUES ('Elena Ivanova', 'F', 'elena.ivanova@gmail.com', '9000015')
  RETURNING ID INTO v_id;
  INSERT INTO CUSTOMERS (ID, DISCOUNT) VALUES (v_id, 11.25);
END;
/

DECLARE
  v_id NUMBER;
BEGIN
  INSERT INTO PEOPLE (PERSON_NAME, GENDER, EMAIL, PHONE)
  VALUES ('Dmitry Zverev', 'M', 'dmitry.zverev@gmail.com', '9000010')
  RETURNING ID INTO v_id;
  INSERT INTO CUSTOMERS (ID, DISCOUNT) VALUES (v_id, 0);
END;
/
-- ==================================== WAITERS =============================================
DECLARE v_id NUMBER;
BEGIN
  INSERT INTO PEOPLE (PERSON_NAME, GENDER, EMAIL, PHONE)
  VALUES ('Bob Waiter', 'M', 'bob.waiter@gmail.com', '8000001')
  RETURNING ID INTO v_id;
  INSERT INTO WAITERS (ID, SALARY) VALUES (v_id, 2500.00);
END;
/

DECLARE v_id NUMBER;
BEGIN
  INSERT INTO PEOPLE (PERSON_NAME, GENDER, EMAIL, PHONE)
  VALUES ('Lina Server', 'F', 'lina.server@gmail.com', '8000002')
  RETURNING ID INTO v_id;
  INSERT INTO WAITERS (ID, SALARY) VALUES (v_id, 2300.00);
END;
/

DECLARE
  v_id NUMBER;
BEGIN
  INSERT INTO PEOPLE (PERSON_NAME, GENDER, EMAIL, PHONE)
  VALUES ('Ivan Koval', 'M', 'ivan.koval@gmail.com', '9000006')
  RETURNING ID INTO v_id;
  INSERT INTO WAITERS (ID, SALARY) VALUES (v_id, 2400.00);
END;
/

DECLARE
  v_id NUMBER;
BEGIN
  INSERT INTO PEOPLE (PERSON_NAME, GENDER, EMAIL, PHONE)
  VALUES ('Anna Rossi', 'F', 'anna.rossi@gmail.com', '9000007')
  RETURNING ID INTO v_id;
  INSERT INTO WAITERS (ID, SALARY) VALUES (v_id, 2200.00);
END;
/

DECLARE v_id NUMBER;
BEGIN
  SELECT ID INTO v_id FROM PEOPLE WHERE EMAIL = 'joao.pereira@gmail.com';
  INSERT INTO WAITERS (ID, SALARY) VALUES (v_id, 2600.00);
END;
/

DECLARE v_id NUMBER;
BEGIN
  INSERT INTO PEOPLE (PERSON_NAME, GENDER, EMAIL, PHONE)
  VALUES ('Carlos Gomez', 'M', 'carlos.gomez@gmail.com', '9000014')
  RETURNING ID INTO v_id;
  INSERT INTO WAITERS (ID, SALARY) VALUES (v_id, 2550.00);
END;
/

SELECT * FROM WAITERS;;

-- ==================================== SUPPLIERS =============================================
DECLARE v_id NUMBER;
BEGIN
  INSERT INTO PEOPLE (PERSON_NAME, GENDER, EMAIL, PHONE)
  VALUES ('Vova Sup', 'M', 'vova.sup@gmail.com', '7000001')
  RETURNING ID INTO v_id;
  INSERT INTO SUPPLIERS (ID, SUPPLIER_TERM) VALUES (v_id, 'Paypal');
END;
/

DECLARE v_id NUMBER;
BEGIN
  INSERT INTO PEOPLE (PERSON_NAME, GENDER, EMAIL, PHONE)
  VALUES ('Anna Deliv', 'F', 'anna.deliv@gmail.com', '7000002')
  RETURNING ID INTO v_id;
  INSERT INTO SUPPLIERS (ID, SUPPLIER_TERM) VALUES (v_id, 'Bank Transfer');
END;
/

DECLARE
  v_id NUMBER;
BEGIN
  INSERT INTO PEOPLE (PERSON_NAME, GENDER, EMAIL, PHONE)
  VALUES ('Sofia Lebedeva', 'F', 'sofia.lebedeva@gmail.com', '9000011')
  RETURNING ID INTO v_id;
  INSERT INTO SUPPLIERS (ID, SUPPLIER_TERM) VALUES (v_id, 'Wire transfer');
END;
/

DECLARE
  v_id NUMBER;
BEGIN
  SELECT ID INTO v_id FROM PEOPLE WHERE EMAIL = 'dmitry.zverev@gmail.com';
  INSERT INTO SUPPLIERS (ID, SUPPLIER_TERM) VALUES (v_id, 'PayPal');
END;
/

DECLARE v_id NUMBER;
BEGIN
  SELECT ID INTO v_id FROM PEOPLE WHERE EMAIL = 'olga.ivanova@gmail.com';
  INSERT INTO SUPPLIERS (ID, SUPPLIER_TERM) VALUES (v_id, 'Card Payment');
END;
/

DECLARE v_id NUMBER;
BEGIN
  SELECT ID INTO v_id FROM PEOPLE WHERE EMAIL = 'marta.sousa@gmail.com';
  INSERT INTO SUPPLIERS (ID, SUPPLIER_TERM) VALUES (v_id, 'Cash');
END;
/

-- ==================================== REVIEWS =============================================
DECLARE v_id NUMBER;
BEGIN
  SELECT ID INTO v_id FROM PEOPLE WHERE EMAIL = 'john.smith@gmail.com';
  INSERT INTO REVIEWS VALUES (v_id, SYSDATE - 2, 4, 'Nice food, a bit slow service.');
END;
/

DECLARE v_id NUMBER;
BEGIN
  SELECT ID INTO v_id FROM PEOPLE WHERE EMAIL = 'maria.petrova@gmail.com';
  INSERT INTO REVIEWS VALUES (v_id, SYSDATE, 3, 'Average experience.');
END;
/

DECLARE v_id NUMBER;
BEGIN
  SELECT ID INTO v_id FROM PEOPLE WHERE EMAIL = 'olga.ivanova@gmail.com';
  INSERT INTO REVIEWS VALUES (v_id, SYSDATE - 0.5, 4, 'Nice soup, quick service!');
END;
/

DECLARE v_id NUMBER;
BEGIN
  SELECT ID INTO v_id FROM PEOPLE WHERE EMAIL = 'pedro.alves@gmail.com';
  INSERT INTO REVIEWS VALUES (v_id, SYSDATE - 1.5, 5, 'The best juice in town!');
END;
/

DECLARE v_id NUMBER;
BEGIN
  SELECT ID INTO v_id FROM PEOPLE WHERE EMAIL = 'sergey.petrov@gmail.com';
  INSERT INTO REVIEWS VALUES (v_id, SYSDATE - 0.7, 5, 'Super fresh salad!');
END;
/

DECLARE v_id NUMBER;
BEGIN
  SELECT ID INTO v_id FROM PEOPLE WHERE EMAIL = 'elena.ivanova@gmail.com';
  INSERT INTO REVIEWS VALUES (v_id, SYSDATE - 3.4, 4, 'Tuna was delicious, but a bit salty!');
END;
/

-- ==================================== DELIVERIES =============================================
DECLARE v_sup NUMBER;
BEGIN
  SELECT ID INTO v_sup FROM PEOPLE WHERE EMAIL = 'sofia.lebedeva@gmail.com';
  INSERT INTO DELIVERIES (SUPPLIER_ID, DELIVERED_ON) VALUES (v_sup, SYSDATE - 8);
END;
/

DECLARE v_sup NUMBER;
BEGIN
  SELECT ID INTO v_sup FROM PEOPLE WHERE EMAIL = 'dmitry.zverev@gmail.com';
  INSERT INTO DELIVERIES (SUPPLIER_ID, DELIVERED_ON) VALUES (v_sup, SYSDATE - 3);
END;
/

DECLARE v_sup NUMBER;
BEGIN
  SELECT ID INTO v_sup FROM PEOPLE WHERE EMAIL = 'vova.sup@gmail.com';
  INSERT INTO DELIVERIES (SUPPLIER_ID, DELIVERED_ON) VALUES (v_sup, SYSDATE - 5);
END;
/

DECLARE v_sup NUMBER;
BEGIN
  SELECT ID INTO v_sup FROM PEOPLE WHERE EMAIL = 'anna.deliv@gmail.com';
  INSERT INTO DELIVERIES (SUPPLIER_ID, DELIVERED_ON) VALUES (v_sup, SYSDATE - 2);
END;
/

DECLARE v_sup NUMBER;
BEGIN
  SELECT ID INTO v_sup FROM PEOPLE WHERE EMAIL = 'olga.ivanova@gmail.com';
  INSERT INTO DELIVERIES (SUPPLIER_ID, DELIVERED_ON) VALUES (v_sup, SYSDATE - 10);
END;
/

DECLARE v_sup NUMBER;
BEGIN
  SELECT ID INTO v_sup FROM PEOPLE WHERE EMAIL = 'marta.sousa@gmail.com';
  INSERT INTO DELIVERIES (SUPPLIER_ID, DELIVERED_ON) VALUES (v_sup, SYSDATE - 11);
END;
/

-- ==================================== DELIVERED =============================================
DECLARE i_id NUMBER; d_id NUMBER;
BEGIN
  SELECT ID INTO i_id FROM INGREDIENTS WHERE INGREDIENT_NAME = 'Orange';
  SELECT ID INTO d_id FROM DELIVERIES WHERE SUPPLIER_ID = (SELECT ID FROM PEOPLE WHERE EMAIL = 'sofia.lebedeva@gmail.com');
  INSERT INTO DELIVERED VALUES (i_id, d_id, 12, 1.1);
END;
/

DECLARE i_id NUMBER; d_id NUMBER;
BEGIN
  SELECT ID INTO i_id FROM INGREDIENTS WHERE INGREDIENT_NAME = 'Cheese';
  SELECT ID INTO d_id FROM DELIVERIES WHERE SUPPLIER_ID = (SELECT ID FROM PEOPLE WHERE EMAIL = 'dmitry.zverev@gmail.com');
  INSERT INTO DELIVERED VALUES (i_id, d_id, 3, 7.0);
END;
/

DECLARE i_id NUMBER; d_id NUMBER;
BEGIN
  SELECT ID INTO i_id FROM INGREDIENTS WHERE INGREDIENT_NAME = 'Berry';
  SELECT ID INTO d_id FROM DELIVERIES WHERE SUPPLIER_ID = (SELECT ID FROM PEOPLE WHERE EMAIL = 'dmitry.zverev@gmail.com');
  INSERT INTO DELIVERED VALUES (i_id, d_id, 2, 5.0);
END;
/

DECLARE i_id NUMBER; d_id NUMBER;
BEGIN
  SELECT ID INTO i_id FROM INGREDIENTS WHERE INGREDIENT_NAME = 'Pasta';
  SELECT ID INTO d_id FROM DELIVERIES WHERE SUPPLIER_ID = (SELECT ID FROM PEOPLE WHERE EMAIL = 'vova.sup@gmail.com');
  INSERT INTO DELIVERED VALUES (i_id, d_id, 10, 1.2);
END;
/

DECLARE i_id NUMBER; d_id NUMBER;
BEGIN
  SELECT ID INTO i_id FROM INGREDIENTS WHERE INGREDIENT_NAME = 'Bacon';
  SELECT ID INTO d_id FROM DELIVERIES WHERE SUPPLIER_ID = (SELECT ID FROM PEOPLE WHERE EMAIL = 'vova.sup@gmail.com');
  INSERT INTO DELIVERED VALUES (i_id, d_id, 5, 4.0);
END;
/

DECLARE i_id NUMBER; d_id NUMBER;
BEGIN
  SELECT ID INTO i_id FROM INGREDIENTS WHERE INGREDIENT_NAME = 'Eggs';
  SELECT ID INTO d_id FROM DELIVERIES WHERE SUPPLIER_ID = (SELECT ID FROM PEOPLE WHERE EMAIL = 'vova.sup@gmail.com');
  INSERT INTO DELIVERED VALUES (i_id, d_id, 60, 0.2);
END;
/

DECLARE i_id NUMBER; d_id NUMBER;
BEGIN
  SELECT ID INTO i_id FROM INGREDIENTS WHERE INGREDIENT_NAME = 'Carrot';
  SELECT ID INTO d_id FROM DELIVERIES WHERE SUPPLIER_ID = (SELECT ID FROM PEOPLE WHERE EMAIL = 'anna.deliv@gmail.com');
  INSERT INTO DELIVERED VALUES (i_id, d_id, 8, 0.8);
END;
/

DECLARE i_id NUMBER; d_id NUMBER;
BEGIN
  SELECT ID INTO i_id FROM INGREDIENTS WHERE INGREDIENT_NAME = 'Beetroot';
  SELECT ID INTO d_id FROM DELIVERIES WHERE SUPPLIER_ID = (SELECT ID FROM PEOPLE WHERE EMAIL = 'anna.deliv@gmail.com');
  INSERT INTO DELIVERED VALUES (i_id, d_id, 6, 0.6);
END;
/

DECLARE i_id NUMBER; d_id NUMBER;
BEGIN
  SELECT ID INTO i_id FROM INGREDIENTS WHERE INGREDIENT_NAME = 'Feta Cheese';
  SELECT ID INTO d_id FROM DELIVERIES WHERE SUPPLIER_ID = (SELECT ID FROM PEOPLE WHERE EMAIL = 'olga.ivanova@gmail.com');
  INSERT INTO DELIVERED VALUES (i_id, d_id, 2, 6.0);
END;
/

DECLARE i_id NUMBER; d_id NUMBER;
BEGIN
  SELECT ID INTO i_id FROM INGREDIENTS WHERE INGREDIENT_NAME = 'Mozzarella';
  SELECT ID INTO d_id FROM DELIVERIES WHERE SUPPLIER_ID = (SELECT ID FROM PEOPLE WHERE EMAIL = 'olga.ivanova@gmail.com');
  INSERT INTO DELIVERED VALUES (i_id, d_id, 5, 7.0);
END;
/

DECLARE i_id NUMBER; d_id NUMBER;
BEGIN
  SELECT ID INTO i_id FROM INGREDIENTS WHERE INGREDIENT_NAME = 'Tuna';
  SELECT ID INTO d_id FROM DELIVERIES WHERE SUPPLIER_ID = (SELECT ID FROM PEOPLE WHERE EMAIL = 'marta.sousa@gmail.com');
  INSERT INTO DELIVERED VALUES (i_id, d_id, 3, 13.0);
END;
/

-- ==================================== TABLES =============================================
INSERT INTO RESTAURANT_TABLES (ID, CAPACITY) VALUES (1, 2);
INSERT INTO RESTAURANT_TABLES (ID, CAPACITY) VALUES (2, 8);
INSERT INTO RESTAURANT_TABLES (ID, CAPACITY) VALUES (3, 2);
INSERT INTO RESTAURANT_TABLES (ID, CAPACITY) VALUES (4, 4);
INSERT INTO RESTAURANT_TABLES (ID, CAPACITY) VALUES (5, 6);
INSERT INTO RESTAURANT_TABLES (ID, CAPACITY) VALUES (6, 10);
INSERT INTO RESTAURANT_TABLES (ID, CAPACITY) VALUES (7, 3);


-- ==================================== ORDERS =============================================
-- Order 5001
DECLARE
  v_cust  NUMBER;
  v_wait  NUMBER;
  v_order NUMBER;
  v_dish1 NUMBER;
  v_dish2 NUMBER;
BEGIN
  SELECT ID INTO v_cust FROM PEOPLE WHERE EMAIL = 'alice.cust@gmail.com';
  SELECT ID INTO v_wait FROM PEOPLE WHERE EMAIL = 'bob.waiter@gmail.com';
  INSERT INTO RESTAURANT_ORDERS (CUSTOMER_ID, WAITER_ID, MADE_ON, TIPS)
    VALUES (v_cust, v_wait, SYSDATE - 1, 3.50)
    RETURNING ID INTO v_order;
  SELECT ID INTO v_dish1 FROM DISHES WHERE DISH_NAME = 'Spaghetti Carbonara';
  INSERT INTO DISHES_TO_ORDERS (ORDER_ID, DISH_ID, QUANTITY) VALUES (v_order, v_dish1, 2);
  SELECT ID INTO v_dish2 FROM DISHES WHERE DISH_NAME = 'Tiramisu';
  INSERT INTO DISHES_TO_ORDERS (ORDER_ID, DISH_ID, QUANTITY) VALUES (v_order, v_dish2, 1);
  INSERT INTO TABLE_SERVICE (ORDER_ID, TABLE_ID, SERVED_ON) VALUES (v_order, 2, SYSDATE - 1);
END;
/

DECLARE
  v_cust  NUMBER;
  v_wait  NUMBER;
  v_order NUMBER;
  v_dish1 NUMBER;
  v_dish2 NUMBER;
BEGIN
  SELECT ID INTO v_cust FROM PEOPLE WHERE EMAIL = 'john.smith@gmail.com';
  SELECT ID INTO v_wait FROM PEOPLE WHERE EMAIL = 'lina.server@gmail.com';
  INSERT INTO RESTAURANT_ORDERS (CUSTOMER_ID, WAITER_ID, MADE_ON, TIPS)
    VALUES (v_cust, v_wait, SYSDATE - 2, 5.00)
    RETURNING ID INTO v_order;
  SELECT ID INTO v_dish1 FROM DISHES WHERE DISH_NAME = 'Caesar Salad';
  INSERT INTO DISHES_TO_ORDERS (ORDER_ID, DISH_ID, QUANTITY) VALUES (v_order, v_dish1, 1);
  SELECT ID INTO v_dish2 FROM DISHES WHERE DISH_NAME = 'Ukrainian Borscht';
  INSERT INTO DISHES_TO_ORDERS (ORDER_ID, DISH_ID, QUANTITY) VALUES (v_order, v_dish2, 1);
  INSERT INTO TABLE_SERVICE (ORDER_ID, TABLE_ID, SERVED_ON) VALUES (v_order, 3, SYSDATE - 2);
END;
/

DECLARE
  v_cust  NUMBER;
  v_wait  NUMBER;
  v_order NUMBER;
  v_dish1 NUMBER;
  v_dish2 NUMBER;
BEGIN
  SELECT ID INTO v_cust FROM PEOPLE WHERE EMAIL = 'maria.petrova@gmail.com';
  SELECT ID INTO v_wait FROM PEOPLE WHERE EMAIL = 'bob.waiter@gmail.com';
  INSERT INTO RESTAURANT_ORDERS (CUSTOMER_ID, WAITER_ID, MADE_ON, TIPS)
    VALUES (v_cust, v_wait, SYSDATE, 0.00)
    RETURNING ID INTO v_order;
  SELECT ID INTO v_dish1 FROM DISHES WHERE DISH_NAME = 'Spaghetti Carbonara';
  INSERT INTO DISHES_TO_ORDERS (ORDER_ID, DISH_ID, QUANTITY) VALUES (v_order, v_dish1, 1);
  SELECT ID INTO v_dish2 FROM DISHES WHERE DISH_NAME = 'Ukrainian Borscht';
  INSERT INTO DISHES_TO_ORDERS (ORDER_ID, DISH_ID, QUANTITY) VALUES (v_order, v_dish2, 2);
  INSERT INTO TABLE_SERVICE (ORDER_ID, TABLE_ID, SERVED_ON) VALUES (v_order, 1, SYSDATE);
END;
/

-- Order 5004
DECLARE
  v_cust  NUMBER;
  v_wait  NUMBER;
  v_order NUMBER;
  v_dish1 NUMBER;
BEGIN
  SELECT ID INTO v_cust FROM PEOPLE WHERE EMAIL = 'alice.cust@gmail.com';
  SELECT ID INTO v_wait FROM PEOPLE WHERE EMAIL = 'bob.waiter@gmail.com';
  INSERT INTO RESTAURANT_ORDERS (CUSTOMER_ID, WAITER_ID, MADE_ON, TIPS)
    VALUES (v_cust, v_wait, SYSDATE - 2 + INTERVAL '11:30' HOUR TO MINUTE, 4.00)
    RETURNING ID INTO v_order;
  SELECT ID INTO v_dish1 FROM DISHES WHERE DISH_NAME = 'Caesar Salad';
  INSERT INTO DISHES_TO_ORDERS (ORDER_ID, DISH_ID, QUANTITY) VALUES (v_order, v_dish1, 1);
  INSERT INTO TABLE_SERVICE (ORDER_ID, TABLE_ID, SERVED_ON) VALUES (v_order, 1, SYSDATE - 2 + INTERVAL '11:30' HOUR TO MINUTE);
END;
/

-- Order 5005
DECLARE
  v_cust  NUMBER;
  v_wait  NUMBER;
  v_order NUMBER;
  v_dish1 NUMBER;
BEGIN
  SELECT ID INTO v_cust FROM PEOPLE WHERE EMAIL = 'john.smith@gmail.com';
  SELECT ID INTO v_wait FROM PEOPLE WHERE EMAIL = 'lina.server@gmail.com';
  INSERT INTO RESTAURANT_ORDERS (CUSTOMER_ID, WAITER_ID, MADE_ON, TIPS)
    VALUES (v_cust, v_wait, SYSDATE - 1 + INTERVAL '14:15' HOUR TO MINUTE, 5.00)
    RETURNING ID INTO v_order;
  SELECT ID INTO v_dish1 FROM DISHES WHERE DISH_NAME = 'Tiramisu';
  INSERT INTO DISHES_TO_ORDERS (ORDER_ID, DISH_ID, QUANTITY) VALUES (v_order, v_dish1, 1);
  INSERT INTO TABLE_SERVICE (ORDER_ID, TABLE_ID, SERVED_ON) VALUES (v_order, 2, SYSDATE - 1 + INTERVAL '14:15' HOUR TO MINUTE);
END;
/

-- Order 5006
DECLARE
  v_cust  NUMBER;
  v_wait  NUMBER;
  v_order NUMBER;
  v_dish1 NUMBER;
BEGIN
  SELECT ID INTO v_cust FROM PEOPLE WHERE EMAIL = 'maria.petrova@gmail.com';
  SELECT ID INTO v_wait FROM PEOPLE WHERE EMAIL = 'bob.waiter@gmail.com';
  INSERT INTO RESTAURANT_ORDERS (CUSTOMER_ID, WAITER_ID, MADE_ON, TIPS)
    VALUES (v_cust, v_wait, SYSDATE - 1 + INTERVAL '18:10' HOUR TO MINUTE, 2.00)
    RETURNING ID INTO v_order;
  SELECT ID INTO v_dish1 FROM DISHES WHERE DISH_NAME = 'Ukrainian Borscht';
  INSERT INTO DISHES_TO_ORDERS (ORDER_ID, DISH_ID, QUANTITY) VALUES (v_order, v_dish1, 2);
  INSERT INTO TABLE_SERVICE (ORDER_ID, TABLE_ID, SERVED_ON) VALUES (v_order, 3, SYSDATE - 1 + INTERVAL '18:10' HOUR TO MINUTE);
END;
/

-- Order 5007
DECLARE
  v_cust  NUMBER;
  v_wait  NUMBER;
  v_order NUMBER;
  v_dish1 NUMBER;
BEGIN
  SELECT ID INTO v_cust FROM PEOPLE WHERE EMAIL = 'john.smith@gmail.com';
  SELECT ID INTO v_wait FROM PEOPLE WHERE EMAIL = 'lina.server@gmail.com';
  INSERT INTO RESTAURANT_ORDERS (CUSTOMER_ID, WAITER_ID, MADE_ON, TIPS)
    VALUES (v_cust, v_wait, SYSDATE - 3 + INTERVAL '12:15' HOUR TO MINUTE, 3.00)
    RETURNING ID INTO v_order;
  SELECT ID INTO v_dish1 FROM DISHES WHERE DISH_NAME = 'Spaghetti Carbonara';
  INSERT INTO DISHES_TO_ORDERS (ORDER_ID, DISH_ID, QUANTITY) VALUES (v_order, v_dish1, 1);
  INSERT INTO TABLE_SERVICE (ORDER_ID, TABLE_ID, SERVED_ON) VALUES (v_order, 2, SYSDATE - 3 + INTERVAL '12:15' HOUR TO MINUTE);
END;
/

-- Order 5008
DECLARE
  v_cust  NUMBER;
  v_wait  NUMBER;
  v_order NUMBER;
  v_dish1 NUMBER;
BEGIN
  SELECT ID INTO v_cust FROM PEOPLE WHERE EMAIL = 'maria.petrova@gmail.com';
  SELECT ID INTO v_wait FROM PEOPLE WHERE EMAIL = 'bob.waiter@gmail.com';
  INSERT INTO RESTAURANT_ORDERS (CUSTOMER_ID, WAITER_ID, MADE_ON, TIPS)
    VALUES (v_cust, v_wait, SYSDATE - 4 + INTERVAL '19:45' HOUR TO MINUTE, 6.00)
    RETURNING ID INTO v_order;
  SELECT ID INTO v_dish1 FROM DISHES WHERE DISH_NAME = 'Ukrainian Borscht';
  INSERT INTO DISHES_TO_ORDERS (ORDER_ID, DISH_ID, QUANTITY) VALUES (v_order, v_dish1, 1);
  INSERT INTO TABLE_SERVICE (ORDER_ID, TABLE_ID, SERVED_ON) VALUES (v_order, 1, SYSDATE - 4 + INTERVAL '19:45' HOUR TO MINUTE);
END;
/

-- Order 6001
DECLARE
  v_cust  NUMBER;
  v_wait  NUMBER;
  v_order NUMBER;
  v_dish1 NUMBER;
  v_dish2 NUMBER;
BEGIN
  SELECT ID INTO v_cust FROM PEOPLE WHERE EMAIL = 'olga.ivanova@gmail.com';
  SELECT ID INTO v_wait FROM PEOPLE WHERE EMAIL = 'ivan.koval@gmail.com';
  INSERT INTO RESTAURANT_ORDERS (CUSTOMER_ID, WAITER_ID, MADE_ON, TIPS)
    VALUES (v_cust, v_wait, SYSDATE - 0.3, 4.50)
    RETURNING ID INTO v_order;
  SELECT ID INTO v_dish1 FROM DISHES WHERE DISH_NAME = 'Chicken Soup';
  INSERT INTO DISHES_TO_ORDERS (ORDER_ID, DISH_ID, QUANTITY) VALUES (v_order, v_dish1, 1);
  SELECT ID INTO v_dish2 FROM DISHES WHERE DISH_NAME = 'Cheesecake';
  INSERT INTO DISHES_TO_ORDERS (ORDER_ID, DISH_ID, QUANTITY) VALUES (v_order, v_dish2, 2);
  INSERT INTO TABLE_SERVICE (ORDER_ID, TABLE_ID, SERVED_ON) VALUES (v_order, 4, SYSDATE - 0.3);
END;
/

-- Order 6002
DECLARE
  v_cust  NUMBER;
  v_wait  NUMBER;
  v_order NUMBER;
  v_dish1 NUMBER;
BEGIN
  SELECT ID INTO v_cust FROM PEOPLE WHERE EMAIL = 'marta.sousa@gmail.com';
  SELECT ID INTO v_wait FROM PEOPLE WHERE EMAIL = 'anna.rossi@gmail.com';
  INSERT INTO RESTAURANT_ORDERS (CUSTOMER_ID, WAITER_ID, MADE_ON, TIPS)
    VALUES (v_cust, v_wait, SYSDATE - 1.2, 3.20)
    RETURNING ID INTO v_order;
  SELECT ID INTO v_dish1 FROM DISHES WHERE DISH_NAME = 'Orange Juice';
  INSERT INTO DISHES_TO_ORDERS (ORDER_ID, DISH_ID, QUANTITY) VALUES (v_order, v_dish1, 1);
  INSERT INTO TABLE_SERVICE (ORDER_ID, TABLE_ID, SERVED_ON) VALUES (v_order, 5, SYSDATE - 1.2);
END;
/

-- Order 7001
DECLARE
  v_cust  NUMBER;
  v_wait  NUMBER;
  v_order NUMBER;
  v_dish1 NUMBER;
  v_dish2 NUMBER;
BEGIN
  SELECT ID INTO v_cust FROM PEOPLE WHERE EMAIL = 'dmitry.zverev@gmail.com';
  SELECT ID INTO v_wait FROM PEOPLE WHERE EMAIL = 'joao.pereira@gmail.com';
  INSERT INTO RESTAURANT_ORDERS (CUSTOMER_ID, WAITER_ID, MADE_ON, TIPS)
    VALUES (v_cust, v_wait, SYSDATE - 0.5, 7.00)
    RETURNING ID INTO v_order;
  SELECT ID INTO v_dish1 FROM DISHES WHERE DISH_NAME = 'Greek Salad';
  INSERT INTO DISHES_TO_ORDERS (ORDER_ID, DISH_ID, QUANTITY) VALUES (v_order, v_dish1, 1);
  SELECT ID INTO v_dish2 FROM DISHES WHERE DISH_NAME = 'Margherita Pizza';
  INSERT INTO DISHES_TO_ORDERS (ORDER_ID, DISH_ID, QUANTITY) VALUES (v_order, v_dish2, 2);
  INSERT INTO TABLE_SERVICE (ORDER_ID, TABLE_ID, SERVED_ON) VALUES (v_order, 6, SYSDATE - 0.5);
END;
/

-- Order 8001
DECLARE
  v_cust  NUMBER;
  v_wait  NUMBER;
  v_order NUMBER;
  v_dish1 NUMBER;
BEGIN
  SELECT ID INTO v_cust FROM PEOPLE WHERE EMAIL = 'elena.ivanova@gmail.com';
  SELECT ID INTO v_wait FROM PEOPLE WHERE EMAIL = 'carlos.gomez@gmail.com';
  INSERT INTO RESTAURANT_ORDERS (CUSTOMER_ID, WAITER_ID, MADE_ON, TIPS)
    VALUES (v_cust, v_wait, SYSDATE - 3.0, 2.10)
    RETURNING ID INTO v_order;
  SELECT ID INTO v_dish1 FROM DISHES WHERE DISH_NAME = 'Tuna Steak';
  INSERT INTO DISHES_TO_ORDERS (ORDER_ID, DISH_ID, QUANTITY) VALUES (v_order, v_dish1, 1);
  INSERT INTO TABLE_SERVICE (ORDER_ID, TABLE_ID, SERVED_ON) VALUES (v_order, 7, SYSDATE - 3.0);
END;
/

COMMIT;