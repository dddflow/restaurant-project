name: Test SQL Execution on Oracle XE

on:
  workflow_dispatch:

jobs:
  test-sql:
    runs-on: ubuntu-latest
    services:
      oracle:
        image: gvenzl/oracle-xe:21-slim
        ports:
          - 1521:1521
        env:
          ORACLE_PASSWORD: testpass
          APP_USER: test
          APP_USER_PASSWORD: test

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🕒 Wait for Oracle to become available
        run: |
          docker_id=$(docker ps -q --filter ancestor=gvenzl/oracle-xe:21-slim)
          for i in {1..30}; do
            if docker exec $docker_id bash -c "echo 'exit' | sqlplus -s system/testpass@XE" | grep -q 'Connected to:'; then
              echo "Oracle XE is ready!"
              exit 0
            fi
            echo "Waiting for Oracle XE... ($i/30)"
            sleep 5
          done
          echo "Oracle XE did not become ready in time." >&2
          exit 1

      - name: 📥 Copy SQL files into container
        run: |
          docker_id=$(docker ps -q --filter ancestor=gvenzl/oracle-xe:21-slim)
          docker cp sql/. $docker_id:/sql

      - name: 🧪 Run SQL file (submission_file.sql only)
        run: |
          docker_id=$(docker ps -q --filter ancestor=gvenzl/oracle-xe:21-slim)

          SQL_FILE="submission_file.sql"
          LOG_FILE="${SQL_FILE%.sql}.log"
          echo "[$(date)] 🟢 Running: $SQL_FILE"
          docker exec $docker_id bash -c '
            echo "WHENEVER SQLERROR EXIT SQL.SQLCODE;" > temp.sql
            cat /sql/'$SQL_FILE' >> temp.sql
            sqlplus -s system/testpass@XE @temp.sql
          ' 2>&1 | tee -a $LOG_FILE
          echo "[$(date)] 📝 Log for $SQL_FILE saved to $LOG_FILE"

      - name: 📦 Upload log as artifact
        uses: actions/upload-artifact@v4.3.1
        with:
          name: oracle-sql-log
          path: |
            submission_file.log